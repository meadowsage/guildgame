<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.meadowsage.guildgame.mapper.PersonMapper">

    <resultMap id="adventurerMap" type="com.meadowsage.guildgame.model.person.Adventurer" autoMapping="true">
        <id property="id" column="id"/>
        <association property="name" columnPrefix="n_" autoMapping="true"/>
        <association property="money" columnPrefix="m_" autoMapping="true"/>
        <association property="reputation" columnPrefix="r_" autoMapping="true"/>
        <association property="battle" columnPrefix="b_" autoMapping="true"/>
        <association property="knowledge" columnPrefix="k_" autoMapping="true"/>
        <association property="support" columnPrefix="s_" autoMapping="true"/>
        <association property="energy" columnPrefix="e_" autoMapping="true"/>
        <association property="personImage" columnPrefix="pi_" autoMapping="true"/>
        <collection property="personalities" ofType="com.meadowsage.guildgame.model.person.Personality">
            <result column="personality"/>
        </collection>
        <collection property="skills" columnPrefix="ps_" autoMapping="true"
                    ofType="com.meadowsage.guildgame.model.person.PersonSkill"/>
    </resultMap>

    <resultMap id="applicantMap" type="com.meadowsage.guildgame.model.person.Applicant" autoMapping="true">
        <id property="id" column="id"/>
        <association property="name" columnPrefix="n_" autoMapping="true"/>
        <association property="money" columnPrefix="m_" autoMapping="true"/>
        <association property="reputation" columnPrefix="r_" autoMapping="true"/>
        <association property="battle" columnPrefix="b_" autoMapping="true"/>
        <association property="knowledge" columnPrefix="k_" autoMapping="true"/>
        <association property="support" columnPrefix="s_" autoMapping="true"/>
        <association property="energy" columnPrefix="e_" autoMapping="true"/>
        <association property="personImage" columnPrefix="pi_" autoMapping="true"/>
        <collection property="personalities" ofType="com.meadowsage.guildgame.model.person.Personality">
            <result column="personality"/>
        </collection>
        <collection property="skills" columnPrefix="ps_" autoMapping="true"
                    ofType="com.meadowsage.guildgame.model.person.PersonSkill"/>
    </resultMap>

    <select id="selectAdventurers" resultMap="adventurerMap">
        SELECT
        p.id,
        p.is_actioned,
        p.first_name AS n_first_name,
        p.family_name AS n_family_name,
        p.money AS m_value,
        p.reputation AS r_value,
        '戦闘' AS b_name,
        p.battle AS b_value,
        p.battle_exp AS b_exp,
        '知識' AS k_name,
        p.knowledge AS k_value,
        p.knowledge_exp AS k_exp,
        '支援' AS s_name,
        p.support AS s_value,
        p.support_exp AS s_exp,
        p.max_energy AS e_max,
        p.energy AS e_value,
        p2.type AS personality,
        ps.skill as ps_skill,
        ps.level as ps_level,
        ps.exp as ps_exp,
        pi.image_body as pi_body,
        pi.image_face as pi_face,
        pi.image_eye as pi_eye,
        pi.image_hair as pi_hair,
        pi.image_cloth as pi_cloth
        FROM person p
        LEFT JOIN applicant a on p.id = a.person_id
        LEFT JOIN personality p2 on p.id = p2.person_id
        LEFT JOIN person_skill ps on p.id = ps.person_id
        INNER JOIN person_image pi on p.id = pi.person_id
        WHERE a.person_id IS NULL
        <if test="worldId != null">
            AND world_id = #{worldId}
        </if>
        <if test="ids != null &amp;&amp; !ids.isEmpty()">
            AND p.id IN
            <foreach item="id" collection="ids" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
    </select>

    <select id="selectApplicants" resultMap="applicantMap">
        SELECT p.id,
               p.first_name   as n_first_name,
               p.family_name  as n_family_name,
               p.money        as m_value,
               p.reputation   as r_value,
               p.battle       as b_value,
               p.knowledge    as k_value,
               p.support      as s_value,
               p.max_energy   as e_max,
               p.energy       as e_value,
               p2.type        as personality,
               ps.skill       as ps_skill,
               ps.level       as ps_level,
               ps.exp         as ps_exp,
               pi.image_body  as pi_body,
               pi.image_face  as pi_face,
               pi.image_eye   as pi_eye,
               pi.image_hair  as pi_hair,
               pi.image_cloth as pi_cloth
        FROM person p
                 LEFT JOIN applicant a on p.id = a.person_id
                 LEFT JOIN personality p2 on p.id = p2.person_id
                 LEFT JOIN person_skill ps on p.id = ps.person_id
                 INNER JOIN person_image pi on p.id = pi.person_id
        WHERE world_id = #{worldId}
          AND a.person_id IS NOT NULL
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="person.id">
        INSERT INTO person (world_id,
                            first_name,
                            family_name,
                            money,
                            reputation,
                            battle,
                            battle_exp,
                            knowledge,
                            knowledge_exp,
                            support,
                            support_exp,
                            max_energy,
                            energy,
                            is_actioned)
        VALUES (#{worldId},
                #{person.name.firstName},
                #{person.name.familyName},
                #{person.money.value},
                #{person.reputation.value},
                #{person.battle.value},
                #{person.battle.exp},
                #{person.knowledge.value},
                #{person.knowledge.exp},
                #{person.support.value},
                #{person.support.exp},
                #{person.energy.max},
                #{person.energy.value},
                #{person.isActioned})
    </insert>

    <insert id="insertPersonImage">
        INSERT INTO person_image(person_id,
                                 image_body,
                                 image_face,
                                 image_eye,
                                 image_hair,
                                 image_cloth)
        VALUES (#{personId},
                #{personImage.body},
                #{personImage.face},
                #{personImage.eye},
                #{personImage.hair},
                #{personImage.cloth})
    </insert>

    <insert id="insertPersonalities">
        INSERT INTO personality(person_id, type)
        VALUES
        <foreach item="type" collection="personalities" separator=",">
            (#{id}, #{type})
        </foreach>
        ON CONFLICT(person_id, type) DO NOTHING;
    </insert>

    <insert id="insertSkills">
        INSERT INTO person_skill (person_id, skill, level, exp)
        VALUES
        <foreach item="personSkill" collection="skills" separator=",">
            (#{id}, #{personSkill.skill.name}, #{personSkill.level}, #{personSkill.exp})
        </foreach>
        ON CONFLICT(person_id, skill) DO NOTHING;
    </insert>

    <update id="update">
        UPDATE person p
        SET money       = #{money.value},
            reputation  = #{reputation.value},
            energy      = #{energy.value},
            is_actioned = #{isActioned}
        WHERE p.id = #{id}
    </update>

    <update id="updateSkill">
        UPDATE person_skill
        SET level = #{personSkill.level},
            exp   = #{personSkill.exp}
        WHERE person_id = #{personId}
          AND skill = #{personSkill.skill.name}
    </update>

    <delete id="delete">
        DELETE
        FROM person
        WHERE id = #{personId}
    </delete>
</mapper>