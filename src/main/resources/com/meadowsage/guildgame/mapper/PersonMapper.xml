<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.meadowsage.guildgame.mapper.PersonMapper">

    <resultMap id="adventurerMap" type="com.meadowsage.guildgame.model.person.Adventurer" autoMapping="true">
        <association property="name" columnPrefix="n_" autoMapping="true"/>
        <association property="money" columnPrefix="m_" autoMapping="true"/>
        <association property="reputation" columnPrefix="r_" autoMapping="true"/>
        <association property="battle" columnPrefix="b_" autoMapping="true"/>
        <association property="knowledge" columnPrefix="k_" autoMapping="true"/>
        <association property="support" columnPrefix="s_" autoMapping="true"/>
        <association property="energy" columnPrefix="e_" autoMapping="true"/>
    </resultMap>

    <resultMap id="applicantMap" type="com.meadowsage.guildgame.model.person.Applicant" autoMapping="true">
        <association property="name" columnPrefix="n_" autoMapping="true"/>
        <association property="money" columnPrefix="m_" autoMapping="true"/>
        <association property="reputation" columnPrefix="r_" autoMapping="true"/>
        <association property="battle" columnPrefix="b_" autoMapping="true"/>
        <association property="knowledge" columnPrefix="k_" autoMapping="true"/>
        <association property="support" columnPrefix="s_" autoMapping="true"/>
        <association property="energy" columnPrefix="e_" autoMapping="true"/>
    </resultMap>

    <select id="selectAdventurers" resultMap="adventurerMap">
        SELECT p.*,
        first_name as n_first_name,
        family_name as n_family_name,
        money as m_value,
        reputation as r_value,
        battle as b_value,
        knowledge as k_value,
        support as s_value,
        max_energy as e_max,
        energy as e_value
        FROM person p
        LEFT JOIN applicant a on p.id = a.person_id
        LEFT JOIN quest_order qo on p.id = qo.person_id AND qo.state = 'ONGOING'
        WHERE
        a.person_id IS NULL
        <if test="worldId != null">
            AND world_id = #{worldId}
        </if>
        <if test="ids != null &amp;&amp; !ids.isEmpty()">
            AND p.id IN
            <foreach item="id" collection="ids" open="(" separator="," close=")">
                #{id}
            </foreach>
        </if>
        <if test="notOrdering != null &amp;&amp; notOrdering == true">
            AND qo.id IS NULL
        </if>
        <if test="notOrdering != null &amp;&amp; notOrdering == false">
            AND qo.id IS NOT NULL
        </if>
    </select>

    <select id="selectApplicants" resultMap="applicantMap">
        SELECT p.*,
               first_name  as n_first_name,
               family_name as n_family_name,
               money       as m_value,
               reputation  as r_value,
               battle      as b_value,
               knowledge   as k_value,
               support     as s_value,
               max_energy  as e_max,
               energy      as e_value
        FROM person p
                 LEFT JOIN applicant a on p.id = a.person_id
        WHERE world_id = #{worldId}
          AND a.person_id IS NOT NULL
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="person.id">
        INSERT INTO person (world_id,
                            first_name,
                            family_name,
                            money,
                            reputation,
                            battle,
                            knowledge,
                            support,
                            max_energy,
                            energy,
                            is_actioned)
        VALUES (#{worldId},
                #{person.name.firstName},
                #{person.name.familyName},
                #{person.money.value},
                #{person.reputation.value},
                #{person.battle.value},
                #{person.knowledge.value},
                #{person.support.value},
                #{person.energy.max},
                #{person.energy.value},
                #{person.isActioned})
    </insert>

    <update id="update">
        UPDATE person p
        SET money       = #{money.value},
            reputation  = #{reputation.value},
            energy      = #{energy.value},
            is_actioned = #{isActioned}
        WHERE p.id = #{id}
    </update>

    <delete id="delete">
        DELETE
        FROM person
        WHERE id = #{personId}
    </delete>
</mapper>